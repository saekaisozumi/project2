<nav class="nav-bar-container">
  <div class="float">
    <div class="search-bar">
      <input class="search-cafe" type="text" name="search" placeholder="search a cafe">
      <button>search</button>
    </div>
  </div>
  <div class="float">
    <div class="date-time">
      <select name="" id="filter-date">
        <option>Monday</option>
        <option>Tuesday</option>
        <option>Wednesday</option>
        <option>Thursday</option>
        <option>Friday</option>
        <option>Saturday</option>
        <option>Sunday</option>
      </select>

      <select name="" id="filter-time">
        <option>Monday</option>
        <option>Tuesday</option>
        <option>Wednesday</option>
        <option>Thursday</option>
        <option>Friday</option>
        <option>Saturday</option>
        <option>Sunday</option>
      </select>
    </div>
  </div>
  <div class="logout">
    <a href="/logout"> Log out</a>
  </div>
</nav>

{{!--ã€€change above --}}

<div id='map' style='width: 100%; height:700px;'></div>
<script>
  mapboxgl.accessToken =
    "pk.eyJ1Ijoic2Fla2ExMTExIiwiYSI6ImNrNmhxcXZzeTB6MHUzbm1sZGg4dmd4NTcifQ.n75w0QK5TPx_Qrdq3zeyQA";
  var map = new mapboxgl.Map({
    container: "map",
    style: "mapbox://styles/saeka1111/ck6hr1os501r51io2lx2h2h2g",
    center: [13.404019, 52.519083],
    zoom: 11.15
  });

  const nav = new mapboxgl.NavigationControl();
  map.addControl(nav, "top-right"); // where map refers to the name of our instance of Map

  const geolocate = new mapboxgl.GeolocateControl({
    showUserLocation: false, // default is true, defines whether a dot should be shown where user is located
    trackUserLocation: true // default is false, allows to update user location on the map if the user's location changes
  });
  map.addControl(geolocate, "top-right");

  //const cafeId = location.pathname.split('/')[1] // /main  NEED TO BE AN ACTUAL ID
  axios.get(`http://localhost:3000/caffees`).then(response => {
    console.log("RESPONSE ID", response.data)
    response.data.forEach(elem => {
      console.log(elem.coordinates)
      let coordinates = elem.coordinates;
      if (!coordinates.longitude && !coordinates.latitude) coordinates = map.getCenter();
      const marker = new mapboxgl.Marker(
        { draggable: false }
      )


      marker.setLngLat({ lng: coordinates.longitude, lat: coordinates.latitude });
      marker.addTo(map);

      const popup = new mapboxgl.Popup();
      popup.setLngLat({ lng: coordinates.longitude, lat: coordinates.latitude });
      popup.setHTML(`<div><img src="${elem.image_url}" alt="" style="width:130px;height:130px;"> <a href="/details/${elem.id}"><h3 >${elem.name}</h3></a><p> Address: ${elem.location.address1},${elem.location.zip_code},${elem.location.city} </p>
      <p>Telephone:${elem.display_phone} </p><p> Rating: ${elem.rating}<p></div>`);
      marker.setPopup(popup);

    })
    return
    /*marker.on('dragend', (data) => {
      const coord = data.target.getLngLat().toArray();*/
    marker.on("dragend", data => {
      const coord = data.target.coordinates;             //getLngLat().toArray();
      console.log("coord thing", coord);
      axios
        .patch(`http://localhost:3000/main`, { coordinates: coord })
        .then(() => {
          console.log("communities shown!");
        })
        .catch(err => {
          console.log(err);
        });

    })


  })

  map.on('click', function (e) {
    let coordinates = e.lngLat;

    if (!coordinates.lng && !coordinates.lat)
      coordinates = map.getCenter();
    const marker = new mapboxgl.Marker(
      { draggable: false }
    )


    marker.setLngLat({ lng: coordinates.lng, lat: coordinates.lat });
    /*marker.addTo(map);

    const popup = new mapboxgl.Popup();
    popup.setLngLat({ lng: coordinates.lng, lat: coordinates.lat });
    popup.setHTML(`<h1><a href="/addCafe">Add Cafe</h1></a>`);
    marker.setPopup(popup);
    console.log(e.lngLat);*/

    const popup = new mapboxgl.Popup({ closeOnClick: false, className: "my- class" });
    popup.setLngLat({ lng: coordinates.lng, lat: coordinates.lat });
    popup.setHTML(`<h1><a href="/addCafe">Add Cafe</h1></a>`);
    popup.addTo(map);
    marker.addTo(map);
    marker.setPopup(popup);
    console.log(e.lngLat)



    /*marker.on('dragend', (data) => {
      const coord = data.target.getLngLat().toArray();*/
    marker.on("dragend", data => {
      const coord = data.target.coordinates;             //getLngLat().toArray();
      axios
        .patch(`http://localhost:3000/main`, { coordinates: coord })
        .then(() => {
          console.log("communities shown!");
        })
        .catch(err => {
          console.log(err);
        });

    })
    console.log(e)



  })


</script>



<footer>
  <div class="footer-container"> created by...</div>
</footer>